1) Matrix rotation

# Function to rotate a matrix 90 degrees clockwise
def rotate_matrix(matrix):
    # Get the number of rows and columns
    n=len(matrix)
    # Transpose the matrix
    matrix=[[matrix[j][i] for j in range(n)] for i in range(n)]
    # Reverse each row 
    matrix=[row[::-1] for row in matrix]
    return matrix
matrix=[[1,2,3],
            [4,5,6],
            [7,8,9]]
    # Print original matrix
print("Original Matrix:")
for row in matrix:
    print(row)
    # Rotate the matrix
rotated_matrix=rotate_matrix(matrix)
    # Print rotated matrix
print("Rotated Matrix:")
for row in rotated_matrix:
        print(row)

Output
Original Matrix:
[1, 2, 3]
[4, 5, 6]
[7, 8, 9]
Rotated Matrix:
[7, 4, 1]
[8, 5, 2]
[9, 6, 3]

2) Spiral matrix

# Function to return all elements in spiral order
def spiralOrder(matrix):
    # Initialize result list
    result=[]
    # If matrix is empty
    if not matrix:
        return result
    # Get number of rows and columns 
    rows, cols=len(matrix),len(matrix[0])
    # Initialize pointers for rows and columns
    top,bottom=0,rows-1
    left,right=0,cols-1
    # Traverse matrix in spiral order 
    while top<=bottom and left<=right:
        # Traverse from left to right
        for i in range(left,right+1):
            # Append current element to result list
            result.append(matrix[top][i])
        # Move top pointer down
        top+=1
        # Traverse from top to bottom
        for i in range(top,bottom+1):
            # Append current element to result list
            result.append(matrix[right][i])
        # Move right pointer left
        right-=1
        # Check if pointers are valid
        if top<=bottom:
            # Traverse from right to left
            for i in range(right,left-1,-1):
                 # Append current element to result list
                result.append(matrix[bottom][i])
        # Move bottom pointer down
        bottom-=1
        # Check if pointers are still valid
        if left<=right:
            # Traverse from bottom to top
            for i in range(bottom,top-1,-1):
                 # Append current element to result list
                 result.append(matrix[i][left])
            # Move left pointer right
            left+=1
# Return result list
    return result
matrix=[[1,2,3],
        [4,5,6],
        [7,8,9]]
print(spiralOrder(matrix))

Output
[1, 2, 3, 6, 9, 8, 7, 4, 5]

