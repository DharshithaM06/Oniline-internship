# 1) Insert elements in the end and beginning of linked list


class Node:
    def __init__(link, data):
        # Initialize node with data and pointers to next node
        link.data = data
        link.next = None

class LinkedList:
    def __init__(link):
        # Initialize head of list to None
        link.head = None

    def insert_at_beginning(link, data):
        # Create  new node with given data
        new_node = Node(data)
        # If the list is empty, set the head to the new node
        if link.head is None:
            link.head = new_node
        else:
            # Link new node to current head and update head
            new_node.next = link.head
            link.head = new_node

    def insert_at_end(link, data):
        # Create new node with given data
        new_node = Node(data)
        # If the list is empty, set head to new node
        if link.head is None:
            link.head = new_node
        else:
            # Traverse the list to find last node and link new node to it
            current = link.head
            while current.next:
                current = current.next
            current.next = new_node

    def print_list(link):
        # Traverse list from head to end and print each node's data
        current = link.head
        while current:
            print(current.data, end=" ")
            current = current.next
        print()

def main():
    linked_list = LinkedList()
    while True:
        print("\nLinked List Menu:")
        print("1. Insert element at the beginning")
        print("2. Insert element at the end")
        print("3. Print the list")
        print("4. Exit")
        choice = input("Enter your choice: ")
        if choice == "1":
            data = int(input("Enter the element to insert at the beginning: "))
            linked_list.insert_at_beginning(data)
        elif choice == "2":
            data = int(input("Enter the element to insert at the end: "))
            linked_list.insert_at_end(data)
        elif choice == "3":
            print("Linked List: ")
            linked_list.print_list()
        elif choice == "4":
            break
        else:
            print("Invalid choice. Please choose again.")

if __name__ == "__main__":
    main()
